[*] Warning: models are not being checkpoint
[*] Setting Randomness...
[2025-09-15 01:02:43,466][jax._src.xla_bridge][INFO] - Unable to initialize backend 'cuda':
[2025-09-15 01:02:43,466][jax._src.xla_bridge][INFO] - Unable to initialize backend 'rocm': module 'jaxlib.xla_extension' has no attribute 'GpuAllocatorConfig'
[2025-09-15 01:02:43,467][jax._src.xla_bridge][INFO] - Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
[2025-09-15 01:02:43,468][jax._src.xla_bridge][WARNING] - An NVIDIA GPU may be present on this machine, but a CUDA-enabled jaxlib is not installed. Falling back to cpu.
[*] Generating MNIST Classification Dataset...
[*] Starting `s4` Training on `mnist-classification` =>> Initializing...
/home/jaxon/research/fault-injection/ssm-fault-inj/s4/train.py:131: DeprecationWarning: jax.tree_leaves is deprecated: use jax.tree.leaves (jax v0.4.25 or newer) or jax.tree_util.tree_leaves (any JAX version).
  extra_keys = set(lr_layer.keys()) - set(jax.tree_leaves(name_map(params)))
/home/jaxon/research/fault-injection/ssm-fault-inj/s4/train.py:143: DeprecationWarning: jax.tree_leaves is deprecated: use jax.tree.leaves (jax v0.4.25 or newer) or jax.tree_util.tree_leaves (any JAX version).
  print(f"[*] Trainable Parameters: {sum(jax.tree_leaves(param_sizes))}")
[*] Trainable Parameters: 397834
[*] Total training steps: 4690
[*] Starting Training Epoch 1...
100%|██████████████████████████████████████████████████████████████████████████████████████████████| 469/469 [35:45<00:00,  4.57s/it]
[*] Running Epoch 1 Validation...
100%|████████████████████████████████████████████████████████████████████████████████████████████████| 79/79 [01:32<00:00,  1.17s/it]
injecting faults
injecting faults
injecting faults
injecting faults
injecting faults
injecting faults
injecting faults
injecting faults

=>> Epoch 1 Metrics ===
	Train Loss: 0.83870 -- Train Accuracy: 0.7196
	 Test Loss: nan --  Test Accuracy: 0.1155
	Best Test Loss: nan -- Best Test Accuracy: 0.1155 at Epoch 1

[*] Starting Training Epoch 2...
100%|██████████████████████████████████████████████████████████████████████████████████████████████| 469/469 [35:31<00:00,  4.54s/it]
[*] Running Epoch 2 Validation...
100%|████████████████████████████████████████████████████████████████████████████████████████████████| 79/79 [01:30<00:00,  1.14s/it]

=>> Epoch 2 Metrics ===
	Train Loss: 0.13897 -- Train Accuracy: 0.9590
	 Test Loss: nan --  Test Accuracy: 0.1538
	Best Test Loss: nan -- Best Test Accuracy: 0.1538 at Epoch 2

[*] Starting Training Epoch 3...
 13%|████████████▌                                                                                  | 62/469 [04:46<31:18,  4.61s/it]
Traceback (most recent call last):
  File "/home/jaxon/research/fault-injection/ssm-fault-inj/s4/train.py", line 469, in <module>
    main()
  File "/home/jaxon/miniconda3/envs/ssm-faults/lib/python3.9/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/home/jaxon/miniconda3/envs/ssm-faults/lib/python3.9/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/home/jaxon/miniconda3/envs/ssm-faults/lib/python3.9/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/home/jaxon/miniconda3/envs/ssm-faults/lib/python3.9/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
  File "/home/jaxon/miniconda3/envs/ssm-faults/lib/python3.9/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
  File "/home/jaxon/miniconda3/envs/ssm-faults/lib/python3.9/site-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
  File "/home/jaxon/miniconda3/envs/ssm-faults/lib/python3.9/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/jaxon/research/fault-injection/ssm-fault-inj/s4/train.py", line 465, in main
    example_train(**cfg)
  File "/home/jaxon/research/fault-injection/ssm-fault-inj/s4/train.py", line 357, in example_train
    state, train_loss, train_acc = train_epoch(
  File "/home/jaxon/research/fault-injection/ssm-fault-inj/s4/train.py", line 164, in train_epoch
    state, loss, acc = train_step(
  File "<string>", line 1, in <lambda>
KeyboardInterrupt
